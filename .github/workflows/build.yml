# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build on tests success (released)

on:
  push:
    branches: [ main ]

jobs:
  build-and-publish:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'

    - name: Extract repo branch
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch

    - name: Extract repo url
      shell: bash
      run: echo "repo_url=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}" >> $GITHUB_OUTPUT
      id: extract_repo_url 
    
    - name: Extract repo name
      shell: bash
      run: echo "repo_name=${GITHUB_REPOSITORY##*/}" >> $GITHUB_OUTPUT
      id: extract_repo_name
      
    - name: Clean install of dependencies
      run: npm ci 
          
    - name: Run tests
      id: tests
      run: npm test
      
    - name: Notify test results 
      uses: fragnarok/notify-action@v2
      with:
        type: ${{ steps.tests.outcome == 'success' && 'pending' || 'error' }}
        repoName: ${{ steps.extract_repo_name.outputs.repo_name }}
        branch: '${{ steps.extract_branch.outputs.branch }}'
        details: ${{ steps.tests.outcome == 'success' && vars.TEST_OK_BUILD_PEN || vars.TEST_ER_BUILD_SKIP  }}
        repoLink: ${{ steps.extract_repo_url.outputs.repo_url }}
        IFTTT_KEY: ${{ secrets.IFTTT_KEY }}
        
    - name: Build on test success
      if: steps.tests.outcome == 'success'
      id: build
      run: npm run build --if-present
      
    - name: Notify build results
      if: steps.tests.outcome == 'success'
      uses: fragnarok/notify-action@v2
      with:
        type: ${{ steps.build.outcome == 'success' && 'pending' || 'error' }}
        repoName: ${{ steps.extract_repo_name.outputs.repo_name }}
        branch: '${{ steps.extract_branch.outputs.branch }}'
        details: ${{ steps.build.outcome == 'success' && vars.BUILD_OK_PUBLISH_PEN || format('{0} - {1}', vars.BUILD_ER_PUBLISH_SKIP, steps.build.outputs) }}
        repoLink: ${{ steps.extract_repo_url.outputs.repo_url }}
        IFTTT_KEY: ${{ secrets.IFTTT_KEY }}

    - name: Publish on test success
      if: steps.tests.outcome == 'success' && steps.build.outcome == 'success'
      run: npm publish
      id: publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_KEY }}
      
    - name: Notify publish results
      if: steps.tests.outcome == 'success' && steps.build.outcome == 'success'
      uses: fragnarok/notify-action@v2
      with:
        type: ${{ steps.build.outcome == 'success' && 'success' || 'error' }}
        repoName: ${{ steps.extract_repo_name.outputs.repo_name }}
        branch: '${{ steps.extract_branch.outputs.branch }}'
        details: ${{ steps.build.outcome == 'success' && vars.PUBLISH_OK || format('{0} - {1}', vars.PUBLISH_ER, steps.publish.outputs) }}
        repoLink: ${{ steps.extract_repo_url.outputs.repo_url }}
        IFTTT_KEY: ${{ secrets.IFTTT_KEY }}
        

